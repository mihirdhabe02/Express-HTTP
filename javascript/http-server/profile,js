const express = require('express');
const zod  = require('zod');
const app = express();

let userDetails = {};

//middleware
app.use(express.json()); //acts as a body parser

//input validation using a middleware function
const validateProfile = (req, res, next)=>
{
    if(!req.body.profile ||!schema.safeParse(req.body.profile))
    {
        res.status(401).json({msg: "Invalid Profile Credentials"})
        return;
    }
    next();
};

const schema  = zod.object(
    {
        name: zod.string(),
        email: zod.string().email(),
        password: zod.string()
    }
)

//get method which shows user his profle 
app.get('/', (req, res)=>
{
    res.send(userDetails)
})

//post method which lets user set the name , email , password
app.post('/', validateProfile, (req, res)=>
{
    userDetails = req.body.profile;
    res.json({msg: "User Profile Crdentials Saved"})
})

// delete method which lets delete the login details
app.delete('/', (req, res)=>
{
    userDetails = {};
    res.json({msg: "User Details deleted"})
})

// put method which updates the login details 
app.put('/',validateProfile, (req, res)=>
{
    userDetails = req.body.profile;
    res.json({msg: "details successfully updated"})
})

//exception handling
app.use((req, res) => {
    res.status(404).json({ error: { msg: "Not Found" } });
});

//start the server
app.listen(3000, ()=>
{
    console.log("Listening on port 3000");
})